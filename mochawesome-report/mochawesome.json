{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-27T12:24:17.311Z",
    "end": "2025-10-27T12:24:26.739Z",
    "duration": 9428,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "58ba4f88-43bb-4f4a-93c0-79b9c5c41dfa",
      "title": "",
      "fullFile": "D:\\SQA\\Mini Bootcamp QA\\HOMEWORK\\Sesi10_FikriWicaksono\\tests\\sesi10-hook.js",
      "file": "\\tests\\sesi10-hook.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de10923a-9e98-4ba9-9082-919d92bb5a70",
          "title": "SauceDemo Automation",
          "fullFile": "D:\\SQA\\Mini Bootcamp QA\\HOMEWORK\\Sesi10_FikriWicaksono\\tests\\sesi10-hook.js",
          "file": "\\tests\\sesi10-hook.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SauceDemo Automation\"",
              "fullTitle": "SauceDemo Automation \"before each\" hook in \"SauceDemo Automation\"",
              "timedOut": false,
              "duration": 1985,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup chrome\nconst service = new chrome.ServiceBuilder('C:\\\\Users\\\\ThinkPad\\\\Downloads\\\\chromedriver-win64\\\\chromedriver.exe');\nconst options = new chrome.Options();\noptions.addArguments('--incognito');\n// options.addArguments('--headless'); // aktifkan kalau mau tanpa tampilan\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .setChromeService(service)\n    .build();\nawait driver.get('https://www.saucedemo.com');\nconsole.log('Browser membuka halaman SauceDemo.');\n// login sebelum test dengan memanggil function form-login.js\nawait inputFormLogin(driver, 'standard_user', 'secret_sauce');\nconsole.log('Login berhasil');",
              "err": {},
              "uuid": "2059f07e-cf8d-4be4-b186-14d2c85d1cf0",
              "parentUUID": "de10923a-9e98-4ba9-9082-919d92bb5a70",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SauceDemo Automation\"",
              "fullTitle": "SauceDemo Automation \"after each\" hook in \"SauceDemo Automation\"",
              "timedOut": false,
              "duration": 198,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    await driver.quit();\n    console.log('Browser ditutup setelah test');\n}",
              "err": {},
              "uuid": "6b080622-e6ca-4bdb-b0c5-b1bad7cbca36",
              "parentUUID": "de10923a-9e98-4ba9-9082-919d92bb5a70",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test Case 1 - Login sukses dengan valid password",
              "fullTitle": "SauceDemo Automation Test Case 1 - Login sukses dengan valid password",
              "timedOut": false,
              "duration": 1018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const title = await driver.getTitle();\nassert.strictEqual(title, 'Swag Labs');\nconsole.log('Validasi title Swag Labs berhasil');\nawait driver.sleep(1000); // pakai sleep agar freeze sebentar untuk cek dan debug",
              "err": {},
              "uuid": "1950473e-5cc4-439b-b634-967c7b3d2693",
              "parentUUID": "de10923a-9e98-4ba9-9082-919d92bb5a70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 2 - Sort produk Low to High",
              "fullTitle": "SauceDemo Automation Test Case 2 - Sort produk Low to High",
              "timedOut": false,
              "duration": 4263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Tunggu dropdown sortir muncul\nconst dropdownSort = await driver.wait(\n    until.elementLocated(By.css('[data-test=\"product-sort-container\"]')),\n    10000\n);\n// Klik dan pilih \"Price (low to high)\"\nawait dropdownSort.click();\nconst priceLowToHigh = await driver.findElement(By.xpath('//option[text()=\"Price (low to high)\"]'));\nawait priceLowToHigh.click();\nconsole.log('Dropdown diubah ke \"Price (low to high)\".');\nawait driver.sleep(2000); // pakai sleep agar freeze sebentar untuk cek dan debug\nconst firstPrice = await driver.findElement(By.css('.inventory_item_price'));\nconst priceText = await firstPrice.getText(); // misal \"$7.99\"\nassert.ok(priceText.includes('$')); // minimal cek pricenya udah sesuai apa belum\nawait driver.sleep(2000); // jeda untuk observasi manual",
              "err": {},
              "uuid": "d1c43a69-5580-4aac-ae84-6c888a2277a8",
              "parentUUID": "de10923a-9e98-4ba9-9082-919d92bb5a70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1950473e-5cc4-439b-b634-967c7b3d2693",
            "d1c43a69-5580-4aac-ae84-6c888a2277a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}
{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-27T03:25:16.932Z",
    "end": "2025-10-27T03:25:24.677Z",
    "duration": 7745,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "961754a0-e9d4-48d0-bf69-acb5535a4a8e",
      "title": "",
      "fullFile": "D:\\SQA\\Mini Bootcamp QA\\HOMEWORK\\Sesi10_FikriWicaksono\\tests\\sesi10-hook.js",
      "file": "\\tests\\sesi10-hook.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f945fef-1a5f-4883-b0e2-b321493e9d38",
          "title": "SauceDemo Automation",
          "fullFile": "D:\\SQA\\Mini Bootcamp QA\\HOMEWORK\\Sesi10_FikriWicaksono\\tests\\sesi10-hook.js",
          "file": "\\tests\\sesi10-hook.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1 - Login sukse dengan valid password",
              "fullTitle": "SauceDemo Automation Test Case 1 - Login sukse dengan valid password",
              "timedOut": false,
              "duration": 3463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// kenapa pake serviceBuilder? karena chromedrivernya pakai yang v141, jadi harus setting pathnya yang sesuai juga\nconst service = new chrome.ServiceBuilder('C:\\\\Users\\\\ThinkPad\\\\Downloads\\\\chromedriver-win64\\\\chromedriver.exe');\nconst options = new chrome.Options();\noptions.addArguments('--incognito');\ndriver = await new Builder()\n    .forBrowser('chrome')\n    .setChromeOptions(options)\n    .setChromeService(service)\n    .build();\nawait driver.get('https://www.saucedemo.com');\n// input username dan password\nconst inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'));\nconst inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'));\nconst buttonLogin = await driver.findElement(By.css('.submit-button.btn_action'));\nawait inputUsername.sendKeys('standard_user');\nawait inputPassword.sendKeys('secret_sauce');\nawait buttonLogin.click();\nconst title = await driver.getTitle();\nassert.strictEqual(title, 'Swag Labs');\nawait driver.sleep(2000); // pakai sleep agar freeze sebentar untuk cek dan debug",
              "err": {},
              "uuid": "88895a17-af22-4d1c-909f-2c2e2e2e43e1",
              "parentUUID": "0f945fef-1a5f-4883-b0e2-b321493e9d38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test case 2 - Sort produk Low to High",
              "fullTitle": "SauceDemo Automation Test case 2 - Sort produk Low to High",
              "timedOut": false,
              "duration": 4275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const service = new chrome.ServiceBuilder('C:\\\\Users\\\\ThinkPad\\\\Downloads\\\\chromedriver-win64\\\\chromedriver.exe');\nconst options = new chrome.Options();\noptions.addArguments('--incognito');\n// menunggu sampai produk muncul\nconst dropdownSort = await driver.wait(\n    until.elementLocated(By.css('[data-test=\"product-sort-container\"]')),\n    10000\n);\n// mensortir produk dengan price low to high\nawait dropdownSort.click();\nconst priceLowToHigh = await driver.findElement(By.xpath('//option[text()=\"Price (low to high)\"]'));\nawait priceLowToHigh.click();\nawait driver.sleep(2000); // pakai sleep agar freeze sebentar untuk cek dan debug\n// cek element pertama harganya paling murah\nconst firstPrice = await driver.findElement(By.css('.inventory_item_price'));\nconst priceText = await firstPrice.getText(); // misal \"$7.99\"\nassert.ok(priceText.includes('$')); // minimal cek ada price\nawait driver.sleep(2000);\nawait driver.quit();",
              "err": {},
              "uuid": "70a56e22-eb93-4544-af15-9eeac5c1a17b",
              "parentUUID": "0f945fef-1a5f-4883-b0e2-b321493e9d38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88895a17-af22-4d1c-909f-2c2e2e2e43e1",
            "70a56e22-eb93-4544-af15-9eeac5c1a17b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7738,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": null,
      "version": "6.3.0"
    }
  }
}